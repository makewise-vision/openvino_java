name: Build for Linux

on:
  push:  
    # Sequence of patterns matched against refs/tags
    tags:        
      - '**'

jobs:
  run_ubuntu_20:
   
    runs-on: ubuntu-20.04
    name: Build for Ubuntu-20

    permissions:
      contents: write

    steps:
    - name: Clone repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        wget -q https://services.gradle.org/distributions/gradle-6.9-bin.zip
        unzip gradle-6.9-bin.zip

    - name: Clone
      run: |
        git clone https://github.com/makewise-vision/openvino_contrib -b tensor-as-long --depth 1
        cd openvino_contrib && echo "https://github.com/makewise-vision/openvino_contrib/commit/$(git rev-parse HEAD)" >> ../versions.txt && cd ..

        git clone https://github.com/openvinotoolkit/testdata -b releases/2024/4 --depth 1
        cd testdata && git lfs pull

    - name: Upload versions.txt
      uses: actions/upload-artifact@v4
      with:
        name: "versions"
        path: "versions.txt"

    - name: Install Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
        architecture: 'x86_64'

    - name: Install OpenVINO
      run: |
        wget -q https://storage.openvinotoolkit.org/repositories/openvino/packages/2024.4/linux/l_openvino_toolkit_ubuntu22_2024.4.0.16579.c3152d32c9c_x86_64.tgz -O openvino.tgz
        sudo mkdir -p /opt/intel/openvino
        sudo tar -xf openvino.tgz -C /opt/intel/openvino --strip-components=1
        sudo /opt/intel/openvino/install_dependencies/install_openvino_dependencies.sh -y

    - name: Build bindings
      run: |
        mkdir build_api && cd build_api
        source /opt/intel/openvino/setupvars.sh
        cmake ../openvino_contrib/modules/java_api \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_CXX_FLAGS="-std=c++11"
        make -j$(nproc --all)
        sudo cp *.so /opt/intel/openvino/runtime/lib/intel64

    - name: Build package
      run: |
        source /opt/intel/openvino/setupvars.sh
        ../../../gradle-6.9/bin/gradle clean build --info
        ../../../gradle-6.9/bin/gradle test -Prun_tests -DMODELS_PATH=../../../testdata -Ddevice=CPU --info
      working-directory: openvino_contrib/modules/java_api

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: "pkg_lnx"
        path: "openvino_contrib/modules/java_api/build/libs/*.jar"

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          openvino_contrib/modules/java_api/build/libs/*.jar

  run_win:
    runs-on: windows-latest
    name: Build on Windows

    permissions:
      contents: write

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Clone
        run: |
          git clone https://github.com/makewise-vision/openvino_contrib -b tensor-as-long --depth 1
          git clone https://github.com/openvinotoolkit/testdata -b releases/2024/4 --depth 1

      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          architecture: 'x86_64'

      - name: Download OpenVINO
        run: |
          Invoke-WebRequest https://storage.openvinotoolkit.org/repositories/openvino/packages/2024.4/windows/w_openvino_toolkit_windows_2024.4.0.16579.c3152d32c9c_x86_64.zip -OutFile openvino.zip
          Expand-Archive -Path openvino.zip -DestinationPath "C:\Program Files (x86)\Intel"
          Move-Item -Path "C:\Program Files (x86)\Intel\w_openvino_toolkit_windows_2024.4.0.16579.c3152d32c9c_x86_64" -Destination "C:\Program Files (x86)\Intel\openvino"
        shell: pwsh

      - name: Build bindings
        run: |
          mkdir build_api && cd build_api
          call "C:\Program Files (x86)\Intel\openvino\setupvars.bat"
          cmake ..\openvino_contrib\modules\java_api -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release -j 2
          move Release\\*.dll "C:\Program Files (x86)\Intel\openvino\runtime\bin\intel64\Release"
        shell: cmd

      - name: Build package
        run: |
          call "C:\Program Files (x86)\Intel\openvino\setupvars.bat"
          gradle clean build --info
          gradle test -Prun_tests -DMODELS_PATH=..\\..\\..\\testdata -Ddevice=CPU --info
        shell: cmd
        working-directory: openvino_contrib\\modules\\java_api

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: "pkg_win"
          path: "openvino_contrib\\modules\\java_api\\build\\libs\\*.jar"

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            "openvino_contrib/modules/java_api/build/libs/*.jar"

  run_mac:
    runs-on: macos-latest
    name: Build on Mac

    permissions:
      contents: write

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Clone
        run: |
          git clone https://github.com/makewise-vision/openvino_contrib -b tensor-as-long --depth 1
          git clone https://github.com/openvinotoolkit/testdata -b releases/2024/4 --depth 1

      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          architecture: 'x86_64'

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install OpenVINO
        run: |
          wget -q https://storage.openvinotoolkit.org/repositories/openvino/packages/2024.4/macos/m_openvino_toolkit_macos_12_6_2024.4.0.16579.c3152d32c9c_x86_64.tgz -O openvino.tgz
          sudo mkdir -p /opt/intel/openvino
          sudo tar -xf openvino.tgz -C /opt/intel/openvino --strip-components=1

      - name: Build bindings
        run: |
          brew install coreutils
          
          mkdir build_api && cd build_api
          source /opt/intel/openvino/setupvars.sh
          cmake ../openvino_contrib/modules/java_api \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_FLAGS="-std=c++11"
          make -j$(nproc --all)
          sudo cp *.dylib /opt/intel/openvino/runtime/lib/intel64/Release

      - name: Build package
        run: |
          source /opt/intel/openvino/setupvars.sh
          gradle clean build --info
          gradle test -Prun_tests -DMODELS_PATH=../../../testdata -Ddevice=CPU --info
        working-directory: openvino_contrib/modules/java_api

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: "pkg_mac"
          path: "openvino_contrib/modules/java_api/build/libs/*.jar"

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            "openvino_contrib/modules/java_api/build/libs/*.jar"
